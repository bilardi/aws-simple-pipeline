Resources:
  BuildArtifactsBucket:
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
  Pipeline:
    DependsOn:
    - PipelineRoleDefaultPolicy
    - PipelineRole
    Properties:
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
            - PipelineArtifactsBucketEncryptionKey
            - Arn
          Type: KMS
        Location:
          Ref: PipelineArtifactsBucket
        Type: S3
      RoleArn:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      Stages:
      - Actions:
        - ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: '1'
          Configuration:
            Branch: branch
            OAuthToken: '{{resolve:secretsmanager:/aws-simple-pipeline/secrets/github/token:SecretString:github-token::}}'
            Owner: owner
            PollForSourceChanges: {}
            Repo: repo
          Name: GitHub
          OutputArtifacts:
          - Name: Artifact_Source_GitHub
          RunOrder: {}
        Name: Source
      - Actions:
        - ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            EnvironmentVariables: '[{"name":"ENV","type":"PLAINTEXT","value":"staging-sample"}]'
            ProjectName:
              Ref: Project
          InputArtifacts:
          - Name: Artifact_Source_GitHub
          Name: StagingDeploy
          OutputArtifacts:
          - Name: Artifact_Staging_StagingDeploy
          RoleArn:
            Fn::GetAtt:
            - PipelineStagingStagingDeployCodePipelineActionRole
            - Arn
          RunOrder: {}
        Name: Staging
      - Actions:
        - ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            EnvironmentVariables: '[{"name":"ENV","type":"PLAINTEXT","value":"production-sample"}]'
            ProjectName:
              Ref: Project
          InputArtifacts:
          - Name: Artifact_Source_GitHub
          Name: ProductionDeploy
          OutputArtifacts:
          - Name: Artifact_Production_ProductionDeploy
          RoleArn:
            Fn::GetAtt:
            - PipelineProductionProductionDeployCodePipelineActionRole
            - Arn
          RunOrder: {}
        Name: Production
    Type: AWS::CodePipeline::Pipeline
  PipelineArtifactsBucket:
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            KMSMasterKeyID:
              Fn::GetAtt:
              - PipelineArtifactsBucketEncryptionKey
              - Arn
            SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: {}
        BlockPublicPolicy: {}
        IgnorePublicAcls: {}
        RestrictPublicBuckets: {}
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
  PipelineArtifactsBucketEncryptionKey:
    DeletionPolicy: Delete
    Properties:
      KeyPolicy:
        Statement:
        - Action:
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          - kms:GenerateDataKey
          - kms:TagResource
          - kms:UntagResource
          Effect: Allow
          Principal:
            AWS:
              Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - ':iam::'
                - Ref: AWS::AccountId
                - :root
          Resource: '*'
        - Action:
          - kms:Decrypt
          - kms:DescribeKey
          - kms:Encrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          Effect: Allow
          Principal:
            AWS:
              Fn::GetAtt:
              - PipelineRole
              - Arn
          Resource: '*'
        - Action:
          - kms:Decrypt
          - kms:DescribeKey
          - kms:Encrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          Effect: Allow
          Principal:
            AWS:
              Fn::GetAtt:
              - role
              - Arn
          Resource: '*'
        - Action:
          - kms:Decrypt
          - kms:Encrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          Effect: Allow
          Principal:
            AWS:
              Fn::GetAtt:
              - role
              - Arn
          Resource: '*'
        Version: '2012-10-17'
    Type: AWS::KMS::Key
    UpdateReplacePolicy: Delete
  PipelineArtifactsBucketEncryptionKeyAlias:
    DeletionPolicy: Delete
    Properties:
      AliasName: alias/codepipeline-testpipeline02a1b158
      TargetKeyId:
        Fn::GetAtt:
        - PipelineArtifactsBucketEncryptionKey
        - Arn
    Type: AWS::KMS::Alias
    UpdateReplacePolicy: Delete
  PipelineProductionProductionDeployCodePipelineActionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            AWS:
              Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - ':iam::'
                - Ref: AWS::AccountId
                - :root
        Version: '2012-10-17'
    Type: AWS::IAM::Role
  PipelineProductionProductionDeployCodePipelineActionRoleDefaultPolicy:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - codebuild:BatchGetBuilds
          - codebuild:StartBuild
          - codebuild:StopBuild
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - Project
            - Arn
        Version: '2012-10-17'
      PolicyName: PipelineProductionProductionDeployCodePipelineActionRoleDefaultPolicy
      Roles:
      - Ref: PipelineProductionProductionDeployCodePipelineActionRole
    Type: AWS::IAM::Policy
  PipelineRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
        Version: '2012-10-17'
    Type: AWS::IAM::Role
  PipelineRoleDefaultPolicy:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - s3:GetObject*
          - s3:GetBucket*
          - s3:List*
          - s3:DeleteObject*
          - s3:PutObject*
          - s3:Abort*
          Effect: Allow
          Resource:
          - Fn::GetAtt:
            - PipelineArtifactsBucket
            - Arn
          - Fn::Join:
            - ''
            - - Fn::GetAtt:
                - PipelineArtifactsBucket
                - Arn
              - /*
        - Action:
          - kms:Decrypt
          - kms:DescribeKey
          - kms:Encrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - PipelineArtifactsBucketEncryptionKey
            - Arn
        - Action: sts:AssumeRole
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - PipelineStagingStagingDeployCodePipelineActionRole
            - Arn
        - Action: sts:AssumeRole
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - PipelineProductionProductionDeployCodePipelineActionRole
            - Arn
        Version: '2012-10-17'
      PolicyName: PipelineRoleDefaultPolicy
      Roles:
      - Ref: PipelineRole
    Type: AWS::IAM::Policy
  PipelineSourceGitHubWebhookResource:
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: '{{resolve:secretsmanager:/aws-simple-pipeline/secrets/github/token:SecretString:github-token::}}'
      Filters:
      - JsonPath: $.ref
        MatchEquals: refs/heads/{Branch}
      RegisterWithThirdParty: {}
      TargetAction: GitHub
      TargetPipeline:
        Ref: Pipeline
      TargetPipelineVersion: {}
    Type: AWS::CodePipeline::Webhook
  PipelineStagingStagingDeployCodePipelineActionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            AWS:
              Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - ':iam::'
                - Ref: AWS::AccountId
                - :root
        Version: '2012-10-17'
    Type: AWS::IAM::Role
  PipelineStagingStagingDeployCodePipelineActionRoleDefaultPolicy:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - codebuild:BatchGetBuilds
          - codebuild:StartBuild
          - codebuild:StopBuild
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - Project
            - Arn
        Version: '2012-10-17'
      PolicyName: PipelineStagingStagingDeployCodePipelineActionRoleDefaultPolicy
      Roles:
      - Ref: PipelineStagingStagingDeployCodePipelineActionRole
    Type: AWS::IAM::Policy
  Project:
    Properties:
      Artifacts:
        Type: CODE
      Cache:
        Location:
          Fn::Join:
          - /
          - - Ref: BuildArtifactsBucket
            - codebuild-cache
        Type: S3
      EncryptionKey:
        Fn::GetAtt:
        - PipelineArtifactsBucketEncryptionKey
        - Arn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: C
        PrivilegedMode: {}
        Type: LINUX_C
      Name: test
      ServiceRole:
        Fn::GetAtt:
        - role
        - Arn
      Source:
        BuildSpec: buildspec.yml
        Type: CODE
    Type: AWS::CodeBuild::Project
  role:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - :iam::aws:policy/policy
    Type: AWS::IAM::Role
  roleDefaultPolicy:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - s3:GetObject*
          - s3:GetBucket*
          - s3:List*
          - s3:DeleteObject*
          - s3:PutObject*
          - s3:Abort*
          Effect: Allow
          Resource:
          - Fn::GetAtt:
            - BuildArtifactsBucket
            - Arn
          - Fn::Join:
            - ''
            - - Fn::GetAtt:
                - BuildArtifactsBucket
                - Arn
              - /*
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':logs:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :log-group:/aws/codebuild/
              - Ref: Project
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':logs:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :log-group:/aws/codebuild/
              - Ref: Project
              - :*
        - Action:
          - codebuild:CreateReportGroup
          - codebuild:CreateReport
          - codebuild:UpdateReport
          - codebuild:BatchPutTestCases
          - codebuild:BatchPutCodeCoverages
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':codebuild:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :report-group/
              - Ref: Project
              - -*
        - Action:
          - s3:GetObject*
          - s3:GetBucket*
          - s3:List*
          - s3:DeleteObject*
          - s3:PutObject*
          - s3:Abort*
          Effect: Allow
          Resource:
          - Fn::GetAtt:
            - PipelineArtifactsBucket
            - Arn
          - Fn::Join:
            - ''
            - - Fn::GetAtt:
                - PipelineArtifactsBucket
                - Arn
              - /*
        - Action:
          - kms:Decrypt
          - kms:DescribeKey
          - kms:Encrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - PipelineArtifactsBucketEncryptionKey
            - Arn
        - Action:
          - kms:Decrypt
          - kms:Encrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - PipelineArtifactsBucketEncryptionKey
            - Arn
        Version: '2012-10-17'
      PolicyName: roleDefaultPolicy
      Roles:
      - Ref: role
    Type: AWS::IAM::Policy

